generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  bookId          String     @id @db.VarChar(13)
  title           String     @db.VarChar(255)
  author          String     @db.VarChar(255)
  // Date or TimeStamp?
  publicationYear DateTime   @db.Date
  Exemplar        Exemplar[]

  @@unique([title, author])
}

model Borrower {
  borrowerId  Int           @id @default(autoincrement())
  firstName   String        @db.VarChar(255)
  lastName    String        @db.VarChar(255)
  email       String        @unique @db.VarChar(255)
  Transaction Transaction[]
}

model Exemplar {
  // Int Or BigInt?
  exemplarId  Int           @id @default(autoincrement())
  bookId      String        @db.VarChar(13)
  status      Status
  Book        Book          @relation(fields: [bookId], references: [bookId], onDelete: NoAction, onUpdate: NoAction)
  Transaction Transaction[]
}

model Transaction {
  transactionId Int       @id @default(autoincrement())
  borrowerId    Int
  exemplarId    Int
  borrowedAt    DateTime  @default(now()) @db.Timestamptz(6)
  returnedAt    DateTime? @db.Timestamptz(6)
  dueToDate     DateTime  @db.Timestamptz(6)
  Borrower      Borrower  @relation(fields: [borrowerId], references: [borrowerId], onDelete: NoAction, onUpdate: NoAction)
  Exemplar      Exemplar  @relation(fields: [exemplarId], references: [exemplarId], onDelete: NoAction, onUpdate: NoAction)
}

enum Status {
  Available
  Borrowed
  Lost
}
