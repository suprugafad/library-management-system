generator client {
  provider = "prisma-client-js"
  binaryTargets = env("PRISMA_BINARY_TARGETS")
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id Int          @id @default(autoincrement())
  isbn String     @db.VarChar(13) @unique
  title           String     @db.VarChar(255)
  author          String     @db.VarChar(255)
  publicationYear Int @db.SmallInt
  exemplars        Exemplar[]
}

model Borrower {
  id Int           @id @default(autoincrement())
  firstName   String        @db.VarChar(255)
  lastName    String        @db.VarChar(255)
  email       String        @unique @db.VarChar(255)
  transaction Transaction[]
}

model Exemplar {
  id Int           @id @default(autoincrement())
  bookId      Int
  status      Status
  Book        Book          @relation(fields: [bookId], references: [id])
  transaction Transaction[]
}

model Transaction {
  id Int       @id @default(autoincrement())
  borrowerId    Int
  exemplarId    Int
  borrowedAt    DateTime  @default(now())
  returnedAt    DateTime?
  dueToDate     DateTime
  borrower      Borrower  @relation(fields: [borrowerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  exemplar      Exemplar  @relation(fields: [exemplarId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum Status {
  Available
  Borrowed
}
