{
	"info": {
		"_postman_id": "2fa36be5-6876-4fca-a517-f590b2673965",
		"name": "LIBRARY-MANAGEMENT-SYSTEM",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20817272"
	},
	"item": [
		{
			"name": "Books",
			"item": [
				{
					"name": "get all books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "publicationYear",
									"value": "1800",
									"disabled": true
								},
								{
									"key": "title",
									"value": "some title",
									"disabled": true
								},
								{
									"key": "author",
									"value": "Keaton Reinger",
									"disabled": true
								},
								{
									"key": "isbn",
									"value": "123412341234",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const { id } = JSON.parse(responseBody);",
									"",
									"if (id) {",
									"  pm.collectionVariables.set(\"bookId\", id);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// pm.collectionVariables.set (\"randomISBN\", _.random (1000000000,));",
									"pm.collectionVariables.set (\"randomYear\", _.random (1600,2023));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"isbn\": \"927{{$timestamp}}\",\n    \"title\": \"{{$randomPhrase}}\",\n    \"author\": \"{{$randomFirstName}} {{$randomLastName}}\",\n    \"publicationYear\": {{randomYear}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/books/{{bookId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"{{bookId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/books/{{bookId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"{{bookId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"publicationYear\": 2000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/books/{{bookId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"{{bookId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exemplar",
			"item": [
				{
					"name": "get all exemplars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/exemplars",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"exemplars"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const { id } = JSON.parse(responseBody);",
									"",
									"if (id) {",
									"  pm.collectionVariables.set(\"exemplarId\", id);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// pm.collectionVariables.set (\"randomISBN\", _.random (1000000000,));",
									"pm.collectionVariables.set (\"randomYear\", _.random (1600,2023));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": {{bookId}},\n    \"status\": \"Available\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/exemplars",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"exemplars"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/exemplars/{{exemplarId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"exemplars",
								"{{exemplarId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/exemplars/{{exemplarId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"exemplars",
								"{{exemplarId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"Borrowed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/exemplars/{{exemplarId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"exemplars",
								"{{exemplarId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Borrowers",
			"item": [
				{
					"name": "Get all borrowers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/borrowers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"borrowers"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const { id } = JSON.parse(responseBody);",
									"",
									"if (id) {",
									"  pm.collectionVariables.set(\"borrowerId\", id);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/borrowers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"borrowers"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/borrowers/{{borrowerId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"borrowers",
								"{{borrowerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/borrowers/{{borrowerId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"borrowers",
								"{{borrowerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/borrower/{{borrowerId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"borrower",
								"{{borrowerId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Get All transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const { id } = JSON.parse(responseBody);",
									"",
									"if (id) {",
									"  pm.collectionVariables.set(\"transactionId\", id);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dueToDate\", new Date().set);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"borrowerId\": {{borrowerId}},\n    \"exemplarId\": {{exemplarId}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/transactions/{{transactionId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"{{transactionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/transactions/{{transactionId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"{{transactionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"returnedAt\": \"2023-07-09\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/transactions/{{transactionId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"{{transactionId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:4000",
			"type": "string"
		},
		{
			"key": "bookId",
			"value": ""
		},
		{
			"key": "randomISBN",
			"value": ""
		},
		{
			"key": "randomYear",
			"value": ""
		},
		{
			"key": "borrowerId",
			"value": ""
		},
		{
			"key": "exemplarId",
			"value": ""
		},
		{
			"key": "dueToDate",
			"value": ""
		},
		{
			"key": "transactionId",
			"value": ""
		}
	]
}